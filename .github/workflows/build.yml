name: Build and test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [created]
env:
  SWIG_VERSION: '4.0.2'
  NUMPY_VERSION: '1.18.0'
  FAISS_OPT_LEVEL: generic
  FAISS_LIBRARY_SUFFIX: ''
  TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        python-version:
          - cp36-cp36m
        cuda:
          - false
        opt:
          - 'generic'
    env:
      FAISS_ENABLE_GPU: 'OFF'
      CUDA_VERSION: '10.0'
      CUDA_PKG_VERSION: 10-0-10.0.130-1
      CUBLAS_PKG_VERSION: 10-0-10.0.130-1
      NVIDIA_GPGKEY_SUM: d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5
      NVIDIA_GPGKEY_URL: http://developer.download.nvidia.com/compute/cuda/repos/rhel6/x86_64/7fa2af80.pub
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - name: Setup tmate session
      uses: rom1504/action-tmate@customInstallCommand
      with:
        installCommand: "yum install -y tmate openssh-clients"
    - name: Set up Python
      run: echo "/opt/python/${{ matrix.python-version }}/bin" >> $GITHUB_PATH
    - name: Set optimization level
      if: matrix.opt != 'generic'
      run: |
        echo "FAISS_OPT_LEVEL=${{ matrix.opt }}" >> $GITHUB_ENV
        echo "FAISS_LIBRARY_SUFFIX=_${{ matrix.opt }}" >> $GITHUB_ENV
    - name: Install build dependency
      run: |
        sed -i 's/mirrorlist=https/mirrorlist=http/' /etc/yum.repos.d/epel.repo
        yum install -y \
            openblas-devel \
            openblas-static \
            pcre-devel
        curl -fsSLO --retry 3 http://prdownloads.sourceforge.net/swig/swig-${SWIG_VERSION}.tar.gz
        tar xzf swig-${SWIG_VERSION}.tar.gz
        cd swig-${SWIG_VERSION}
        ./configure
        make -j4
        make install
        cd ..
        echo "FAISS_LDFLAGS=-l:libfaiss${FAISS_LIBRARY_SUFFIX}.a -l:libopenblas.a -lgfortran" >> $GITHUB_ENV
        echo "CXXFLAGS=-fvisibility=hidden -fdata-sections -ffunction-sections" >> $GITHUB_ENV
    - name: Build and install faiss
      run: |
        cd faiss
        cmake . \
          -B build \
          -DFAISS_ENABLE_GPU=${FAISS_ENABLE_GPU} \
          -DFAISS_ENABLE_PYTHON=OFF -DBUILD_TESTING=ON \
          -DFAISS_OPT_LEVEL=${FAISS_OPT_LEVEL} \
          -DCMAKE_CUDA_ARCHITECTURES="35;52;60;61;70;75" \
          -DCMAKE_BUILD_TYPE=Release
        make -C build -j4
        make -C build install
        cd ..
    - name: Build package
      run: |
        mv faiss/faiss/python/swigfaiss.swig faiss/faiss/python/swigfaiss.i
        touch faiss/contrib/__init__.py

        pip install --no-cache-dir -U pip
        pip install --no-cache-dir wheel numpy==${NUMPY_VERSION}
        python setup.py sdist
        pip wheel . -w wheelhouse --no-deps --verbose
        auditwheel repair wheelhouse/faiss*.whl -w dist
        ls -lh dist
    - name: Install and test
      if: matrix.python-version != 'cp39-cp39'
      run: |
        pip install --no-cache-dir dist/faiss*.whl
        pip install --no-cache-dir pytest scipy torch
        pytest --deselect="faiss/tests/test_contrib.py::TestComputeGT::test_compute_GT"